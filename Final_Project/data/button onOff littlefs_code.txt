#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <FS.h>
#include <LittleFS.h>

// Replace with your network credentials
const char* ssid = "Citi-Students";
const char* password = "Stud3nt5@C1t!2020";

ESP8266WebServer server(80);

// Pin connected to the LED
const int ledPin = D0;

void handleFileRead(String path) {
  if (path.endsWith("/")) {
    path += "index.html";
  }

  String contentType = "text/plain";
  if (path.endsWith("index.html")) {
    contentType = "text/html";
  } else if (path.endsWith("style.css")) {
    contentType = "text/css";
  } else if (path.endsWith("smart.js")) {
    contentType = "application/javascript";
  } else if (path.endsWith(".ico")) {
    contentType = "image/x-icon";
  }

  if (LittleFS.exists(path)) {
    File file = LittleFS.open(path, "r");
    size_t sent = server.streamFile(file, contentType);
    file.close();
    return;
  }

  server.send(404, "text/plain", "File Not Found");
}

void handleRoot() {
 handleFileRead("/index.html");
 
}

void handleTurnOn() {
  digitalWrite(ledPin, HIGH);
  server.send(200, "text/plain", "LED is ON");
}

void handleTurnOff() {
  digitalWrite(ledPin, LOW);
  server.send(200, "text/plain", "LED is OFF");
}

void handleLightRequest() {
  if (server.method() == HTTP_GET) {
    String state = server.arg("state");

    if (state == "on") {
      handleTurnOn();
    } else if (state == "off") {
      handleTurnOff();
    }

    server.send(200, "text/plain", "OK");

    // Debug statement
    Serial.println(state); // Print the received state parameter to the serial monitor
  }
}


void setup() {
  Serial.begin(115200);
  
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW);

   

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (!LittleFS.begin()) {
    Serial.println("Error initializing LittleFS");
    while (1) {
      delay(1000);
    }
  }

  server.on("/", handleRoot);
  server.on("/ledon", handleTurnOn);
  server.on("/ledoff", handleTurnOff);
  server.on("/light", handleLightRequest);

  server.onNotFound([]() {
    handleFileRead(server.uri());
  });

  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();
}
